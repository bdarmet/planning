package fr.ciag.planning.ui;

import java.util.List;

import org.vaadin.crudui.crud.CrudOperation;
import org.vaadin.crudui.form.AbstractAutoGeneratedCrudFormFactory;

import com.vaadin.ui.Button.ClickListener;
import com.vaadin.data.fieldgroup.BeanFieldGroup;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Component;
import com.vaadin.ui.Field;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Layout;
import com.vaadin.ui.VerticalLayout;

import fr.ciag.planning.domain.CIAGItem;

public class CIAGCrudGridLayout extends AbstractAutoGeneratedCrudFormFactory {

	private List<PropertyInfo> getColumnsInfo() {
		return new AnnotationInfo(domainType).getGridColumns();
	}
	
    @SuppressWarnings("unchecked")
	public CIAGCrudGridLayout(Class<CIAGItem> domainType) {
        super(domainType);
    }
    
	@Override
	public Component buildNewForm(CrudOperation operation, Object domainObject, boolean readOnly,
			ClickListener cancelButtonClickListener, ClickListener operationButtonClickListener) {
        GridLayout gridLayout = new GridLayout(getColumnsInfo().size(), 100);
        gridLayout.setWidth("100%");
        gridLayout.setSpacing(true);

        BeanFieldGroup fieldGroup = new BeanFieldGroup<>(domainObject.getClass());
        List<Field> fields = buildAndBind(operation, domainObject, readOnly, fieldGroup);
        for(PropertyInfo info:getColumnsInfo() {
        	
        };
        fields.stream().forEach(field -> gridLayout.addComponent(field));

        Layout footerLayout = buildFooter(operation, domainObject, cancelButtonClickListener, operationButtonClickListener, fieldGroup);

        VerticalLayout mainLayout = new VerticalLayout(gridLayout, footerLayout);
        mainLayout.setWidth("100%");
        mainLayout.setComponentAlignment(footerLayout, Alignment.BOTTOM_RIGHT);
        mainLayout.setMargin(true);
        mainLayout.setSpacing(true);

        return mainLayout;
	}

}
